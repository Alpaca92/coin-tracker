{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","json","coinId","endDate","Math","floor","Date","now","startDate","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","chipsColor","textColor","accentColor","Title","h1","Loader","span","Img","img","Coins","toggleMode","useQuery","isLoading","data","Helmet","onClick","slice","map","coin","to","id","state","name","src","symbol","toLowerCase","alt","Chart","isLight","fatchCoinHistory","console","log","time_open","open","high","low","close","x","y","type","series","options","mode","chart","height","width","toolbar","show","yaxis","xaxis","labels","categories","price","time_close","tooltip","formatter","value","toFixed","section","DetailContainer","article","DetailTitle","h3","Detail","p","Price","tickersData","ath_price","percent_change_1h","percent_change_24h","percent_change_30d","Overview","OverviewItem","Description","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","refetchInterval","tickersLoading","loading","className","rank","quotes","USD","description","total_supply","max_supply","path","element","Router","basename","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","useState","setIsLight","current","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.c660d1fd.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  return await (await fetch(`${BASE_URL}/coins`)).json();\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  return coinId\n    ? await (await fetch(`${BASE_URL}/coins/${coinId}`)).json()\n    : null;\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  return coinId\n    ? await (await fetch(`${BASE_URL}/tickers/${coinId}`)).json()\n    : null;\n}\n\nexport async function fatchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 14;\n\n  return coinId\n    ? await (\n        await fetch(\n          `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n        )\n      ).json()\n    : null;\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.chipsColor};\n  color: ${(props) => props.theme.textColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n\n  a {\n    transition: color 0.3s ease-in-out;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 20px;\n  }\n\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoins {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface CoinsProps {\n  toggleMode: () => void;\n}\n\nfunction Coins({ toggleMode }: CoinsProps) {\n  const { isLoading, data } = useQuery<ICoins[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n        <button onClick={toggleMode}>toggle mode</button>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 30).map((coin) => (\n            <Coin key={coin.id}>\n              <Link to={coin.id} state={{ name: coin.name }}>\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                  alt={`symbol of ${coin.symbol}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { useQuery } from \"react-query\";\nimport { fatchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n  coinId: string;\n  isLight: boolean;\n}\n\ninterface IHistoricalData {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId, isLight }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistoricalData[]>(\n    [\"ohlcv\", coinId],\n    () => fatchCoinHistory(coinId)\n  );\n\n  console.log(\n    data?.map(({ time_open, open, high, low, close }) => ({\n      x: new Date(time_open),\n      y: [open, high, low, close],\n    }))\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: coinId,\n              data: data?.map(({ time_open, open, high, low, close }) => ({\n                x: time_open,\n                y: [open, high, low, close],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isLight ? \"light\" : \"dark\",\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 500,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              labels: {\n                show: false,\n              },\n              categories: data?.map((price) => price.time_close),\n              type: \"datetime\",\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => `$ ${value.toFixed(3)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import styled from \"styled-components\";\n\nconst Container = styled.section`\n  article:nth-child(2n) {\n    background-color: #070a0a;\n  }\n`;\n\nconst DetailContainer = styled.article`\n  background-color: ${(props) => props.theme.chipsColor};\n  padding: 25px 20px;\n  margin-top: 10px;\n  border-radius: 15px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DetailTitle = styled.h3`\n  text-transform: uppercase;\n`;\n\nconst Detail = styled.p`\n  font-weight: 700;\n`;\n\nfunction Price({ tickersData }: any) {\n  return (\n    <Container>\n      <DetailContainer>\n        <DetailTitle>ath_price</DetailTitle>\n        <Detail>{tickersData?.ath_price}</Detail>\n      </DetailContainer>\n      <DetailContainer>\n        <DetailTitle>percent_change_1h</DetailTitle>\n        <Detail>{tickersData?.percent_change_1h}</Detail>\n      </DetailContainer>\n      <DetailContainer>\n        <DetailTitle>percent_change_24h</DetailTitle>\n        <Detail>{tickersData?.percent_change_24h}</Detail>\n      </DetailContainer>\n      <DetailContainer>\n        <DetailTitle>percent_change_30d</DetailTitle>\n        <Detail>{tickersData?.percent_change_30d}</Detail>\n      </DetailContainer>\n    </Container>\n  );\n}\nexport default Price;\n","import { useLocation, useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { Routes, Route, Link, useMatch } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Helmet } from \"react-helmet\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .back-btn {\n    position: absolute;\n    top: calc(5vh - (35px / 2));\n    right: 5px;\n    width: 35px;\n    height: 35px;\n    background-color: rgba(125, 125, 125, 0.5);\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 700;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n\n  a {\n    display: block;\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\ninterface IInfo {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface ITickers {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface IParams {\n  coinId: string;\n}\n\ninterface ILocation {\n  state: {\n    name: string;\n  };\n}\n\ninterface CoinProps {\n  isLight: boolean;\n}\n\nfunction Coin({ isLight }: CoinProps) {\n  const { coinId } = useParams() as unknown as IParams;\n  const { state } = useLocation() as ILocation;\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const chartMatch = useMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfo>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<ITickers>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>{coinId}</title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <Link className=\"back-btn\" to=\"..\">\n          &larr;\n        </Link>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to=\"chart\">Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to=\"price\">Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Routes>\n            <Route\n              path=\"chart\"\n              element={<Chart isLight={isLight} coinId={coinId} />}\n            />\n            <Route\n              path=\"price\"\n              element={<Price tickersData={tickersData?.quotes?.USD} />}\n            />\n          </Routes>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\ninterface RouterProps {\n  toggleMode: () => void;\n  isLight: boolean;\n}\n\nfunction Router({ toggleMode, isLight }: RouterProps) {\n  return (\n    // <BrowserRouter>\n    <BrowserRouter basename=\"process.env.PUBLIC_URL\">\n      <Routes>\n        <Route path=\"/\" element={<Coins toggleMode={toggleMode} />} />\n        <Route path=\"/:coinId/*\" element={<Coin isLight={isLight} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  chipsColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  chipsColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n  font-weight: 300;\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const [isLight, setIsLight] = useState(false);\n  const toggleMode = () => setIsLight((current) => !current);\n\n  return (\n    <>\n      <ThemeProvider theme={isLight ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <Router toggleMode={toggleMode} isLight={isLight} />\n        <ReactQueryDevtools />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}