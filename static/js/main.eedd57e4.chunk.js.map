{"version":3,"sources":["api.ts","atoms.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","json","coinId","endDate","Math","floor","Date","now","startDate","isDarkAtom","atom","key","default","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","chipsColor","textColor","accentColor","Title","h1","Loader","span","Img","img","Coins","setDarkAtom","useSetRecoilState","useQuery","isLoading","data","Helmet","onClick","prev","slice","map","coin","to","id","state","name","src","symbol","toLowerCase","alt","Chart","isDark","useRecoilValue","fetchCoinHistory","type","series","x","time_open","y","open","high","low","close","options","mode","chart","height","width","toolbar","show","yaxis","xaxis","labels","categories","price","time_close","tooltip","formatter","value","toFixed","section","DetailContainer","article","DetailTitle","h3","Detail","p","Price","tickersData","ath_price","percent_change_1h","percent_change_24h","percent_change_30d","Overview","OverviewItem","Description","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","refetchInterval","tickersLoading","loading","className","rank","quotes","USD","description","total_supply","max_supply","path","element","Router","basename","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.eedd57e4.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport async function fetchCoins() {\r\n  return await (await fetch(`${BASE_URL}/coins`)).json();\r\n}\r\n\r\nexport async function fetchCoinInfo(coinId: string) {\r\n  return coinId\r\n    ? await (await fetch(`${BASE_URL}/coins/${coinId}`)).json()\r\n    : null;\r\n}\r\n\r\nexport async function fetchCoinTickers(coinId: string) {\r\n  return coinId\r\n    ? await (await fetch(`${BASE_URL}/tickers/${coinId}`)).json()\r\n    : null;\r\n}\r\n\r\nexport async function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 23 * 7 * 1;\r\n\r\n  return coinId\r\n    ? await (\r\n        await fetch(\r\n          `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n        )\r\n      ).json()\r\n    : null;\r\n}\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.chipsColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n\r\n  a {\r\n    transition: color 0.3s ease-in-out;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 20px;\r\n  }\r\n\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoins {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const { isLoading, data } = useQuery<ICoins[]>(\"allCoins\", fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n        <button onClick={() => setDarkAtom((prev) => !prev)}>\r\n          toggle mode\r\n        </button>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 30).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link to={coin.id} state={{ name: coin.name }}>\r\n                <Img\r\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt={`symbol of ${coin.symbol}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface IHistoricalData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistoricalData[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: coinId,\r\n              data: data?.map(({ time_open, open, high, low, close }) => ({\r\n                x: time_open,\r\n                y: [open, high, low, close],\r\n              })),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              labels: {\r\n                show: false,\r\n              },\r\n              categories: data?.map((price) => price.time_close),\r\n              type: \"datetime\",\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$ ${value.toFixed(3)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.section`\r\n  article:nth-child(2n) {\r\n    background-color: #070a0a;\r\n  }\r\n`;\r\n\r\nconst DetailContainer = styled.article`\r\n  background-color: ${(props) => props.theme.chipsColor};\r\n  padding: 25px 20px;\r\n  margin-top: 10px;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DetailTitle = styled.h3`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Detail = styled.p`\r\n  font-weight: 700;\r\n`;\r\n\r\nfunction Price({ tickersData }: any) {\r\n  return (\r\n    <Container>\r\n      <DetailContainer>\r\n        <DetailTitle>ath_price</DetailTitle>\r\n        <Detail>{tickersData?.ath_price}</Detail>\r\n      </DetailContainer>\r\n      <DetailContainer>\r\n        <DetailTitle>percent_change_1h</DetailTitle>\r\n        <Detail>{tickersData?.percent_change_1h}</Detail>\r\n      </DetailContainer>\r\n      <DetailContainer>\r\n        <DetailTitle>percent_change_24h</DetailTitle>\r\n        <Detail>{tickersData?.percent_change_24h}</Detail>\r\n      </DetailContainer>\r\n      <DetailContainer>\r\n        <DetailTitle>percent_change_30d</DetailTitle>\r\n        <Detail>{tickersData?.percent_change_30d}</Detail>\r\n      </DetailContainer>\r\n    </Container>\r\n  );\r\n}\r\nexport default Price;\r\n","import { useLocation, useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { Routes, Route, Link, useMatch } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .back-btn {\r\n    position: absolute;\r\n    top: calc(5vh - (35px / 2));\r\n    right: 5px;\r\n    width: 35px;\r\n    height: 35px;\r\n    background-color: rgba(125, 125, 125, 0.5);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\ninterface IInfo {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface ITickers {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface IParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface ILocation {\r\n  state: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams() as unknown as IParams;\r\n  const { state } = useLocation() as ILocation;\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfo>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<ITickers>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{coinId}</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n        <Link className=\"back-btn\" to=\"..\">\r\n          &larr;\r\n        </Link>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Supply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to=\"chart\">Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to=\"price\">Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Routes>\r\n            <Route\r\n              path=\"chart\"\r\n              element={<Chart coinId={coinId} />}\r\n            />\r\n            <Route\r\n              path=\"price\"\r\n              element={<Price tickersData={tickersData?.quotes?.USD} />}\r\n            />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\n\r\n\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename=\"/coin-tracker\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Coins />} />\r\n        <Route path=\"/:coinId/*\" element={<Coin />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  chipsColor: \"transparent\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  chipsColor: \"white\",\r\n};\r\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from 'recoil';\r\nimport { isDarkAtom } from './atoms';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom)\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}